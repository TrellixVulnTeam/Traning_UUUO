use population
switched to db population
show collections
zipcodes

ATLANTA POPULATION

db.zipcodes.find()

db.zipcodes.find({$and:[{"city":"ATLANTA"},{"state": "GA"}]})

db.zipcodes.aggregate([ { $match : { $and:[{"city":"ATLANTA"},{"state": "GA"}] } } ])

db.zipcodes.aggregate( [{ $group: { _id: null, count: { $sum: 1 }}}] )

db.zipcodes.aggregate([{ $match: { city: "ATLANTA" }}, { $count: "ATLANTA" }])

POPULATION BY STATE

db.zipcodes.aggregate([ { $group: { _id: { state: "$state"}, pop: { $sum: "$pop" } } } ])

db.zipcodes.aggregate([ { $group: { _id: { state: "$state"}, pop: { $sum: "$pop" } } }, { $sort: { pop: -1 } } ])

db.zipcodes.aggregate([ { $group: { _id: { state: "$state"}, pop: { $sum: "$pop" } } }, { $sort: { pop: -1 } }, {$limit: 3} ])

POPULATION BY CITY

db.zipcodes.aggregate([ { $group: { _id: { city: "$city", state: "$state" }, pop: { $sum: "$pop" } } } ])

db.zipcodes.aggregate([ { $group: { _id: { city: "$city", state: "$state" }, pop: { $sum: "$pop" } } }, { $sort: { pop: -1 } } ])

db.zipcodes.aggregate([ { $group: { _id: { state: "$state"}, pop: { $sum: "$pop" } } }, { $sort: { pop: -1 } }, {$limit: 3} ])

db.zipcodes.aggregate([ { $group: { _id: { city: "$city", state: "TX" }, pop: { $sum: "$pop" } } }, { $sort: { pop: -1 } }, {$limit: 3} ])

BONUS

db.zipcodes.aggregate([{$group:{_id:"$city",avgPop:{$avg:"$pop"}}}])

db.zipcodes.aggregate([{$limit:3},{$group:{_id:"$city",avgPop:{$avg:"$pop"}}}])